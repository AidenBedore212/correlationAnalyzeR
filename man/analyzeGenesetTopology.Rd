% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analyzeGeneListTopology.R
\name{analyzeGenesetTopology}
\alias{analyzeGenesetTopology}
\title{Analyze Gene List Topology}
\usage{
analyzeGenesetTopology(
  genesOfInterest,
  Sample_Type = c("normal", "cancer"),
  Tissue = "all",
  crossComparisonType = c("PCA", "variantGenes", "coCorrelativeGenes", "pathwayEnrich"),
  pathwayType = c("simple"),
  setComparisonCutoff = "Auto",
  pathwayEnrichment = FALSE,
  pValueCutoff = 0.05,
  numTopGenesToPlot = "Auto",
  alternativeTSNE = TRUE,
  numClusters = "Auto",
  outputPrefix = "CorrelationAnalyzeR_Output",
  returnDataOnly = TRUE,
  pool = NULL,
  makePool = FALSE
)
}
\arguments{
\item{genesOfInterest}{A vector of genes to analyze or the name of an official MSIGDB term.}

\item{Sample_Type}{Type of RNA Seq samples used to create correlation data.
Either "all", "normal", or "cancer". Can be a single value for all genes,
or a vector corresponding to genesOfInterest.}

\item{Tissue}{Which tissue type should gene correlations be derived from?
Default = "all". Can be a single value for all genes,
or a vector corresponding to genesOfInterest.
Run getTissueTypes() to see available tissues.}

\item{crossComparisonType}{The type of topology tests to run. (see details)}

\item{pathwayType}{Which pathway annotations should be considered? Options listed in
correlationAnalyzeR::GSEA_categories. See details of getTERM2GENE for more info.}

\item{setComparisonCutoff}{Only relevant for co-correlation analysis -- the number of genes which
must aggree for a gene to be considered co-correlative within the input gene list.}

\item{pathwayEnrichment}{Logic. If TRUE, pathway enrichment will be performed on variant genes --
if 'variantGenes' selected -- and/or on co-correlative genes -- if "coCorrelativeGenes" selected.}

\item{pValueCutoff}{Numeric. The p value cutoff applied when running all pathway enrichment tests.}

\item{numTopGenesToPlot}{When creating a heatmap of the top co-correlative or top variant genes,
how many genes should be plotted on the y axis? Default: "Auto"}

\item{alternativeTSNE}{Logical. If TRUE, then a TSNE will be run as an alternative to PCA for visualizing
large input gene lists. This is highly recommended as 100+ member gene lists cannot be visualized otherwise.}

\item{numClusters}{The number of clusters to create with hclust or TSNE analysis. Default: "Auto"}

\item{outputPrefix}{Prefix for saved files. Should include directory info.}

\item{returnDataOnly}{if TRUE will return only a list of analysis results. Default: TRUE}

\item{pool}{an object created by pool::dbPool to accessing SQL database.
It will be created if not supplied.}

\item{makePool}{Logical. Should a pool be created if one is not supplied? Default: FALSE.}
}
\value{
A list of correlations for input genes, and the results of chosen analysis + visualizations.
}
\description{
Analyzes the topology of a gene list using gene correlation data and dimension-reduction techniques.
}
\details{
Cross Comparison Types:
- variantGenes: These are the genes which best explain variation between genes within the input list.
                These genes can divide a list into functional groups.
- coCorrelativeGenes: These are the genes which best explain similarities between all genes in the input list.
                      These genes can explain what biological processes unify the input genes.
- PCA: This is a dimensionality reduction technique for exploring the topology of a gene list.
       The PCA analyses here employes hclust to divide the gene list into functional clusters.
       If the input list is > 100 genes, RTsne will be used for visualization.
- pathwayEnrich: Cluster profiler's enricher function will be run on the input gene list.
}
\examples{
genesOfInterest <- c("CDK12", "AURKB", "SFPQ", "NFKB1", "BRCC3", "BRCA2", "PARP1",
                     "DHX9", "SON", "AURKA", "SETX", "BRCA1", "ATMIN")
correlationAnalyzeR::analyzeGenesetTopology(genesOfInterest = genesOfInterest,
                                 Sample_Type = "cancer", returnDataOnly = TRUE,
                                 Tissue = "brain",
                                 crossComparisonType = c("variantGenes", "PCA"))

}
